{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Projects\\\\React basics\\\\react-basic\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport AddTask from './components/AddTask';\nimport TaskList from './components/TaskList';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TASK_ARRAY = [\"ReactJs\", \"NodeJs\", \"Java\"];\nfunction App() {\n  _s();\n  const [taskArray, setTaskArray] = useState(TASK_ARRAY);\n  let some = 'hello';\n  //callback func, now parent class(app.js) sends the function() to child class(AddTask) so child class now sends the info that is collected and sends to parent class through the function .\n  const addDataToTask = Task => {\n    console.log(Task, \"from app\");\n    setTaskArray([...taskArray, Task]);\n    console.log(taskArray);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(AddTask, {\n      data: some,\n      getData: addDataToTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      taskData: taskArray\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"BtJnBEWm55u+I+lmEhkTjWYIbwQ=\");\n_c = App;\nexport default App;\n\n//communication chain is addtask -> app.js ; app.js -> TaskList ; TaskList -> TaskItem\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","AddTask","TaskList","useState","jsxDEV","_jsxDEV","TASK_ARRAY","App","_s","taskArray","setTaskArray","some","addDataToTask","Task","console","log","className","children","data","getData","fileName","_jsxFileName","lineNumber","columnNumber","taskData","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/Projects/React basics/react-basic/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport AddTask from './components/AddTask';\nimport TaskList from './components/TaskList';\nimport { useState } from 'react';\nconst TASK_ARRAY = [\"ReactJs\",\"NodeJs\",\"Java\"];\nfunction App() {\n\n  const [taskArray, setTaskArray]=useState(TASK_ARRAY);\n    let some = 'hello';\n  //callback func, now parent class(app.js) sends the function() to child class(AddTask) so child class now sends the info that is collected and sends to parent class through the function .\n  const addDataToTask = (Task) => {\n    console.log(Task,\"from app\");\n    setTaskArray([...taskArray,Task]);\n    console.log(taskArray);\n  }\n  return (\n    <div className=\"App\">\n\n\n      <AddTask data={some} getData = {addDataToTask}/>\n      <TaskList taskData ={taskArray} />\n    </div>\n  );\n}\n \nexport default App;\n\n//communication chain is addtask -> app.js ; app.js -> TaskList ; TaskList -> TaskItem\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjC,MAAMC,UAAU,GAAG,CAAC,SAAS,EAAC,QAAQ,EAAC,MAAM,CAAC;AAC9C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAACP,QAAQ,CAACG,UAAU,CAAC;EAClD,IAAIK,IAAI,GAAG,OAAO;EACpB;EACA,MAAMC,aAAa,GAAIC,IAAI,IAAK;IAC9BC,OAAO,CAACC,GAAG,CAACF,IAAI,EAAC,UAAU,CAAC;IAC5BH,YAAY,CAAC,CAAC,GAAGD,SAAS,EAACI,IAAI,CAAC,CAAC;IACjCC,OAAO,CAACC,GAAG,CAACN,SAAS,CAAC;EACxB,CAAC;EACD,oBACEJ,OAAA;IAAKW,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAGlBZ,OAAA,CAACJ,OAAO;MAACiB,IAAI,EAAEP,IAAK;MAACQ,OAAO,EAAIP;IAAc;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAChDlB,OAAA,CAACH,QAAQ;MAACsB,QAAQ,EAAGf;IAAU;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEV;AAACf,EAAA,CAlBQD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AAoBZ,eAAeA,GAAG;;AAElB;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}